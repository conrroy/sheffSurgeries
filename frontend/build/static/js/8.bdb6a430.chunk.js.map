{"version":3,"sources":["pages/PageOne.js"],"names":["columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","row","firstName","lastName","rows","id","age","RegisterSchema","Yup","shape","name","required","username","email","password","phone","defaultValues","address","residence","dob","role","office","qualifications","bio","PageOne","methods","useForm","resolver","yupResolver","useState","setRole","setDob","useBoolean","setLoading","onSubmit","data","a","on","showModal","setShowModal","useEffect","subscription","watch","value","unsubscribe","title","style","height","sx","my","display","justifyContent","onClick","variant","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","open","onClose","off","handleSubmit","spacing","py","select","label","direction","dateAdapter","AdapterDateFns","onChange","newValue","renderInput"],"mappings":"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","file":"static/js/8.bdb6a430.chunk.js","sourcesContent":["\n// hooks\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Stack, TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useEffect, useState } from 'react';\nimport { DatePicker, LoadingButton, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport useBoolean from '../hooks/useBoolean';\n// components\nimport Page from '../components/Page';\nimport { RHFTextField, FormProvider } from '../components/hook-form';\n// ----------------------------------------------------------------------\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n    editable: true,\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('name required'),\n  username: Yup.string().required('username required'),\n  email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n  password: Yup.string().required('Password is required'),\n  phone: Yup.string().required('phone is required'),\n});\n\nconst defaultValues = {\n  username: \"\",\n  name: \"\",\n  email: '',\n  password: '',\n  phone: \"\",\n  address: \"\",\n  residence: \"\",\n  dob: \"\",\n  role: \"Patient\",\n  office: \"\",\n  qualifications: \"\",\n  bio: ''\n};\n\n\nexport default function PageOne() {\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n  const [role, setRole] = useState()\n  const [dob, setDob] = useState()\n  const [loading, setLoading] = useBoolean()\n  const onSubmit = async (data) => {\n    setLoading.on()\n    data.role = role\n\n  };\n  const [showModal, setShowModal] = useBoolean(true)\n  useEffect(() => {\n    const subscription = methods.watch((value, { name, type }) => {\n      if (name === \"role\") {\n        setRole(value.role)\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [methods.watch]);\n  return (\n    <Page title=\"Page One\" style={{ height: \"100%\" }}>\n      <Box sx={{\n        my: 2,\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      }}>\n        <Button onClick={setShowModal.on} variant=\"contained\">Add User</Button>\n      </Box>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n      />\n      <Dialog open={showModal} onClose={setShowModal.off}>\n        <DialogTitle>Add User</DialogTitle>\n        <DialogContent sx={{ width: 500 }}>\n          <FormProvider methods={methods} onSubmit={methods.handleSubmit(onSubmit)}>\n            <Stack spacing={2} sx={{\n              py: 3\n            }} >\n              <RHFTextField\n                name=\"role\"\n                select\n                label=\"Role\"\n              >\n                <MenuItem value=\"Nurse\">\n                  Nurse\n                </MenuItem>\n                <MenuItem value=\"Patient\">\n                  Patient\n                </MenuItem>\n                <MenuItem value=\"Doctor\">\n                  Doctor\n                </MenuItem>\n              </RHFTextField>\n              {\n\n                role === \"Doctor\" ? <>\n                  <Stack direction=\"row\" spacing={2}>\n                    <RHFTextField name=\"bio\" label=\"Bio\" />\n                    <RHFTextField\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                    />\n                  </Stack>\n                </> : null\n\n              }\n              <RHFTextField name=\"name\" label=\"Name\" />\n              <RHFTextField name=\"phone\" label=\"Phone\" />\n              {\n                role === \"Nurse\" || role === \"Doctor\" ? <>\n                  <RHFTextField name=\"qualifications\" label=\"Qualifications\" />\n                  <RHFTextField name=\"office\" label=\"Office\" />\n                  <RHFTextField name=\"email\" label=\"Email address\" />\n                </> : null\n              }\n              {\n                role === \"Patient\" ? <>\n                  <RHFTextField name=\"address\" label=\"Address\" />\n                  <RHFTextField name=\"residence\" label=\"Residence\" />\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      name=\"dob\"\n                      label=\"Dob\"\n                      value={dob}\n                      onChange={(newValue) => {\n                        setDob(newValue);\n                      }}\n                      renderInput={(params) => <TextField name='dob' {...params} />}\n                    />\n                  </LocalizationProvider></> : null\n              }\n            </Stack>\n\n          </FormProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={setShowModal.off}>Cancel</Button>\n          <Button>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </Page>\n  );\n}\n"],"sourceRoot":""}